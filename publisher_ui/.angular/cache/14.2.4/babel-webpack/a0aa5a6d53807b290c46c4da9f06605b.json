{"ast":null,"code":"import { ElementRef } from \"@angular/core\";\nimport { DomSanitizer } from '@angular/platform-browser';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/platform-browser\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@angular/material/button\";\nimport * as i5 from \"@angular/material/icon\";\nconst _c0 = [\"fileUpload\"];\n\nfunction FileUploadComponent_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelement(1, \"br\")(2, \"img\", 4)(3, \"br\");\n    i0.ɵɵelementStart(4, \"span\");\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"button\", 5);\n    i0.ɵɵlistener(\"click\", function FileUploadComponent_div_6_Template_button_click_6_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r4);\n      const f_r2 = restoredCtx.$implicit;\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.removeFile($event, f_r2));\n    });\n    i0.ɵɵelementStart(7, \"mat-icon\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd()()();\n  }\n\n  if (rf & 2) {\n    const f_r2 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"src\", ctx_r1.url, i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(f_r2.name);\n    i0.ɵɵadvance(1);\n    i0.ɵɵattribute(\"title\", ctx_r1.deleteButtonLabel ? ctx_r1.deleteButtonLabel : null);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r1.deleteButtonIcon);\n  }\n}\n\nexport let FileUploadComponent = /*#__PURE__*/(() => {\n  class FileUploadComponent {\n    constructor(sanitizer) {\n      this.sanitizer = sanitizer;\n      this.multiple = true;\n      this.auto = true;\n      this.chooseLabel = 'Choose header image';\n      this.uploadLabel = 'Upload';\n      this.cancelLabel = 'Cance';\n      this.deleteButtonIcon = 'close';\n      this.files = [];\n    }\n\n    onClick(event) {\n      if (this.fileUpload) this.fileUpload.nativeElement.click();\n    }\n\n    onInput(event) {}\n\n    onFileSelected(event) {\n      let files = event.dataTransfer ? event.dataTransfer.files : event.target.files;\n      console.log('event::::::', event);\n\n      for (let i = 0; i < files.length; i++) {\n        let file = files[i]; //if(!this.isFileSelected(file)){\n\n        if (this.validate(file)) {\n          //      if(this.isImage(file)) {\n          file.objectURL = this.sanitizer.bypassSecurityTrustUrl(window.URL.createObjectURL(files[i]));\n          this.url = file.objectURL; //      }\n\n          if (!this.isMultiple()) {\n            this.files = [];\n          }\n\n          this.files.push(files[i]); //  }\n        } //}\n\n      }\n    }\n\n    removeFile(event, file) {\n      let ix;\n\n      if (this.files && -1 !== (ix = this.files.indexOf(file))) {\n        this.files.splice(ix, 1);\n        this.clearInputElement();\n      }\n    }\n\n    validate(file) {\n      for (const f of this.files) {\n        if (f.name === file.name && f.lastModified === file.lastModified && f.size === f.size && f.type === f.type) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n\n    clearInputElement() {\n      this.fileUpload.nativeElement.value = '';\n    }\n\n    isMultiple() {\n      return this.multiple;\n    }\n\n  }\n\n  FileUploadComponent.ɵfac = function FileUploadComponent_Factory(t) {\n    return new (t || FileUploadComponent)(i0.ɵɵdirectiveInject(i1.DomSanitizer));\n  };\n\n  FileUploadComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: FileUploadComponent,\n    selectors: [[\"app-file-upload\"]],\n    viewQuery: function FileUploadComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.fileUpload = _t.first);\n      }\n    },\n    inputs: {\n      mode: \"mode\",\n      names: \"names\",\n      url: \"url\",\n      method: \"method\",\n      multiple: \"multiple\",\n      disabled: \"disabled\",\n      accept: \"accept\",\n      maxFileSize: \"maxFileSize\",\n      auto: \"auto\",\n      withCredentials: \"withCredentials\",\n      invalidFileSizeMessageSummary: \"invalidFileSizeMessageSummary\",\n      invalidFileSizeMessageDetail: \"invalidFileSizeMessageDetail\",\n      invalidFileTypeMessageSummary: \"invalidFileTypeMessageSummary\",\n      invalidFileTypeMessageDetail: \"invalidFileTypeMessageDetail\",\n      previewWidth: \"previewWidth\",\n      chooseLabel: \"chooseLabel\",\n      uploadLabel: \"uploadLabel\",\n      cancelLabel: \"cancelLabel\",\n      customUpload: \"customUpload\",\n      showUploadButton: \"showUploadButton\",\n      showCancelButton: \"showCancelButton\",\n      dataUriPrefix: \"dataUriPrefix\",\n      deleteButtonLabel: \"deleteButtonLabel\",\n      deleteButtonIcon: \"deleteButtonIcon\",\n      showUploadInfo: \"showUploadInfo\",\n      inputFileUrl: \"inputFileUrl\",\n      files: \"files\"\n    },\n    decls: 7,\n    vars: 4,\n    consts: [[\"mat-raised-button\", \"\", \"color\", \"primary\", 3, \"click\"], [\"type\", \"file\", 1, \"input_fileupload--hidden\", 3, \"ngModel\", \"accept\", \"input\", \"change\", \"ngModelChange\"], [\"fileUpload\", \"\"], [4, \"ngFor\", \"ngForOf\"], [\"alt\", \"Place image title\", 3, \"src\"], [\"mat-icon-button\", \"\", \"color\", \"primary\", 3, \"click\"]],\n    template: function FileUploadComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"button\", 0);\n        i0.ɵɵlistener(\"click\", function FileUploadComponent_Template_button_click_0_listener($event) {\n          return ctx.onClick($event);\n        });\n        i0.ɵɵelementStart(1, \"mat-icon\");\n        i0.ɵɵtext(2, \"add\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"input\", 1, 2);\n        i0.ɵɵlistener(\"input\", function FileUploadComponent_Template_input_input_4_listener($event) {\n          return ctx.onInput($event);\n        })(\"change\", function FileUploadComponent_Template_input_change_4_listener($event) {\n          return ctx.onFileSelected($event);\n        })(\"ngModelChange\", function FileUploadComponent_Template_input_ngModelChange_4_listener($event) {\n          return ctx.inputFileName = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(6, FileUploadComponent_div_6_Template, 9, 4, \"div\", 3);\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate1(\" \", ctx.chooseLabel, \"\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngModel\", ctx.inputFileName)(\"accept\", ctx.accept);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngForOf\", ctx.files);\n      }\n    },\n    dependencies: [i2.NgForOf, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgModel, i4.MatButton, i5.MatIcon],\n    styles: [\".input_fileupload--hidden[_ngcontent-%COMP%]{display:none}\"]\n  });\n  return FileUploadComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}