{"ast":null,"code":"import { FormControl } from '@angular/forms';\nimport { map, startWith } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@angular/material/autocomplete\";\nimport * as i4 from \"@angular/material/core\";\nimport * as i5 from \"@angular/material/button\";\nimport * as i6 from \"@angular/material/grid-list\";\nimport * as i7 from \"@angular/material/icon\";\nimport * as i8 from \"@angular/material/form-field\";\nimport * as i9 from \"@angular/material/input\";\nimport * as i10 from \"@angular/material/menu\";\nimport * as i11 from \"@angular/router\";\n\nfunction AttributeComponent_mat_option_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 13);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const option_r4 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", option_r4);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", option_r4.name, \" \");\n  }\n}\n\nfunction AttributeComponent_button_11_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 14);\n    i0.ɵɵlistener(\"click\", function AttributeComponent_button_11_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.myControl);\n    });\n    i0.ɵɵelementStart(1, \"mat-icon\");\n    i0.ɵɵtext(2, \"close\");\n    i0.ɵɵelementEnd()();\n  }\n}\n\nexport let AttributeComponent = /*#__PURE__*/(() => {\n  class AttributeComponent {\n    constructor() {\n      this.myControl = new FormControl('');\n      this.options = [{\n        name: 'Mary'\n      }, {\n        name: 'Shelley'\n      }, {\n        name: 'Igor'\n      }];\n      this.myButton1 = new FormControl('');\n    }\n\n    ngOnInit() {\n      this.filteredOptions = this.myControl.valueChanges.pipe(startWith(''), map(value => {\n        const name = typeof value === 'string' ? value : value?.name;\n        return name ? this._filter(name) : this.options.slice();\n      }));\n    }\n\n    displayFn(user) {\n      return user && user.name ? user.name : '';\n    }\n\n    _filter(name) {\n      const filterValue = name.toLowerCase();\n      return this.options.filter(option => option.name.toLowerCase().includes(filterValue));\n    }\n\n  }\n\n  AttributeComponent.ɵfac = function AttributeComponent_Factory(t) {\n    return new (t || AttributeComponent)();\n  };\n\n  AttributeComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AttributeComponent,\n    selectors: [[\"app-attribute\"]],\n    decls: 47,\n    vars: 8,\n    consts: [[\"cols\", \"1\", \"rowHeight\", \"50px\"], [1, \"example-form\"], [\"appearance\", \"legacy\", 1, \"example-full-width\"], [\"type\", \"text\", \"matInput\", \"\", 3, \"formControl\", \"matAutocomplete\"], [3, \"displayWith\"], [\"auto\", \"matAutocomplete\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"matSuffix\", \"\", \"mat-icon-button\", \"\", \"aria-label\", \"Clear\", 3, \"click\", 4, \"ngIf\"], [\"menu\", \"matMenu\"], [\"mat-menu-item\", \"\"], [\"routerLink\", \"/HeaderLogo\"], [\"routerLink\", \"/ItemPageCenter\"], [\"mat-icon-button\", \"\", \"aria-label\", \"Example icon-button with menu icon\", 1, \"example-icon\", 3, \"matMenuTriggerFor\"], [3, \"value\"], [\"matSuffix\", \"\", \"mat-icon-button\", \"\", \"aria-label\", \"Clear\", 3, \"click\"]],\n    template: function AttributeComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"mat-grid-list\", 0)(1, \"mat-grid-tile\")(2, \"form\", 1)(3, \"mat-form-field\", 2)(4, \"mat-label\");\n        i0.ɵɵtext(5, \"search key word\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(6, \"input\", 3);\n        i0.ɵɵelementStart(7, \"mat-autocomplete\", 4, 5);\n        i0.ɵɵtemplate(9, AttributeComponent_mat_option_9_Template, 2, 2, \"mat-option\", 6);\n        i0.ɵɵpipe(10, \"async\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(11, AttributeComponent_button_11_Template, 3, 0, \"button\", 7);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(12, \"mat-menu\", null, 8)(14, \"button\", 9)(15, \"mat-icon\");\n        i0.ɵɵtext(16, \"dialpad\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"span\")(18, \"a\", 10);\n        i0.ɵɵtext(19, \"add new keyword to list\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(20, \"button\", 9)(21, \"mat-icon\");\n        i0.ɵɵtext(22, \"dialpad\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(23, \"span\")(24, \"a\", 10);\n        i0.ɵɵtext(25, \"add one more a keyword field\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(26, \"button\", 9)(27, \"mat-icon\");\n        i0.ɵɵtext(28, \"voicemail\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(29, \"span\")(30, \"a\", 11);\n        i0.ɵɵtext(31, \" add linked a field to previous\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(32, \"button\", 9)(33, \"mat-icon\");\n        i0.ɵɵtext(34, \"voicemail\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(35, \"span\")(36, \"a\", 11);\n        i0.ɵɵtext(37, \" delete the keyword field \");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(38, \"button\", 9)(39, \"mat-icon\");\n        i0.ɵɵtext(40, \"close\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(41, \"span\")(42, \"a\", 11);\n        i0.ɵɵtext(43, \" close \");\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(44, \"button\", 12)(45, \"mat-icon\");\n        i0.ɵɵtext(46, \"menu\");\n        i0.ɵɵelementEnd()()()();\n      }\n\n      if (rf & 2) {\n        const _r0 = i0.ɵɵreference(8);\n\n        const _r3 = i0.ɵɵreference(13);\n\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"formControl\", ctx.myControl)(\"matAutocomplete\", _r0);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"displayWith\", ctx.displayFn);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(10, 6, ctx.filteredOptions));\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.myControl);\n        i0.ɵɵadvance(33);\n        i0.ɵɵproperty(\"matMenuTriggerFor\", _r3);\n      }\n    },\n    dependencies: [i1.NgForOf, i1.NgIf, i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.NgForm, i3.MatAutocomplete, i3.MatAutocompleteTrigger, i4.MatOption, i5.MatButton, i6.MatGridList, i6.MatGridTile, i7.MatIcon, i8.MatFormField, i8.MatLabel, i8.MatSuffix, i9.MatInput, i10.MatMenu, i10.MatMenuItem, i10.MatMenuTrigger, i2.FormControlDirective, i11.RouterLinkWithHref, i1.AsyncPipe],\n    styles: [\".example-form[_ngcontent-%COMP%]{min-width:150px;max-width:500px;width:100%}.example-full-width[_ngcontent-%COMP%]{width:100%}.example-spacer[_ngcontent-%COMP%]{flex:1 1 auto}\"]\n  });\n  return AttributeComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}